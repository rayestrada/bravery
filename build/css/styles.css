/**
 * @file
 * Import Sass mixins, variables, modules, etc.
 */
/**
 * This file is a slight fork of these original sources:
 * - http://necolas.github.io/normalize.css/
 * - https://jonathantneal.github.io/sanitize.css/
 */
/**
 * Base
 */
* {
  -webkit-box-sizing: border-box;
          box-sizing: border-box; }

html {
  font-family: sans-serif;
  font-size: 10px; }

/* Remove default margin. */
body {
  margin: 0;
  padding: 0; }

/**
 * Links
 */
/* Improve readability when focused and also mouse hovered in all browsers. */
a:active,
a:hover {
  outline: 0; }

/**
 * HTML5 display definitions
 */
/* Correct `block` display not defined in IE 8/9. */
article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
nav,
section,
summary {
  display: block;
  position: relative; }

/* Correct `inline-block` display not defined in IE 8/9. */
audio,
canvas,
video {
  display: inline-block; }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/* Address styling not present in IE 8/9. */
[hidden] {
  display: none; }

/**
 * Typography
 */
blockquote,
p {
  margin: 1em 0; }

/* Address styling not present in IE 8/9, Safari 5, and Chrome. */
abbr[title] {
  border-bottom: 1px dotted; }

/* Address style set to `bolder` in Firefox 4+, Safari 5, and Chrome. */
b,
strong {
  font-weight: bold; }

/* Address styling not present in Safari 5 and Chrome. */
dfn {
  font-style: italic; }

/* Address differences between Firefox and other browsers. */
hr {
  height: 0;
  border-bottom: 1px solid;
  margin: 1em 0; }

/* Address styling not present in IE 8/9. */
mark {
  background: #ff0;
  color: #000; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
pre,
samp,
tt,
var {
  font-family: monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Improve readability of pre-formatted text in all browsers. */
pre {
  white-space: pre-wrap; }

/* Set consistent quote types. */
q {
  quotes: "\201C" "\201D" "\2018" "\2019"; }

/* Address inconsistent and variable font size in all browsers. */
small {
  font-size: 80%; }

/* Prevent `sub` and `sup` elements from affecting the line height in all browsers. */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -.25em; }

sup {
  top: -.5em; }

/**
 * Lists
 */
dl,
menu,
ol,
ul {
  /* Address margins set differently in IE 6/7. */
  margin: 1em 0; }

ol ol,
ol ul,
ul ol,
ul ul {
  /* Turn off margins on nested lists. */
  margin: 0; }

dd {
  margin: 0 0 0 30px;
  /* LTR */ }

/* Address paddings set differently in IE 6/7. */
menu,
ol,
ul {
  padding: 0 0 0 30px;
  /* LTR */ }

/**
 * Remove the list style on navigation lists in all browsers (opinionated).
 */
nav ol,
nav ul {
  list-style: none; }

/**
 * Embedded content and figures
 */
/* Remove the border on images inside links in IE 10-. */
img {
  /* Remove border when inside `a` element in IE 8/9. */
  border: 0;
  /* Suppress the space beneath the baseline */
  vertical-align: bottom;
  /* Responsive images */
  max-width: 100%;
  height: auto;
  /* Correct IE 8 not scaling image height when resized. */
  width: auto; }

/* Correct overflow displayed oddly in IE 9. */
svg:not(:root) {
  overflow: hidden; }

/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in IE.
 */
figcaption,
figure,
main {
  /* 1 */
  display: block; }

/* Address margin not present in IE 8/9 and Safari 5. */
figure {
  margin: 0; }

/**
 * Forms
 */
/* Define consistent border */
fieldset {
  border: 1px solid; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out `fieldset` elements in all browsers.
 */
legend {
  border: 0;
  /* 2 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * 1. Correct font family not being inherited in all browsers.
 * 2. Correct font size not being inherited in all browsers.
 * 3. Address margins set differently in Firefox 4+, Safari 5, and Chrome.
 * 4. Improve appearance and consistency with IE 6/7.
 * 5. Keep form elements constrained in their containers.
 * 6. Remove the default styling in all browsers (opinionated).
 */
button,
input,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 2 */
  margin: 0;
  /* 3 */
  max-width: 100%;
  /* 5 */
  background-color: transparent;
  /* 6 */
  color: inherit;
  /* 6 */
  font-size: inherit;
  /* 6 */
  line-height: inherit;
  /* 6 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 * 2. Address Firefox 4+ setting `line-height` on `input` using `!important` in the UA stylesheet.
 */
button,
input {
  line-height: normal;
  /* 2 */
  overflow: visible;
  /* 1 */ }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * 1. Address box sizing set to `content-box` in IE 8/9.
 * 2. Remove excess padding in IE 8/9.
 * 3. Remove excess padding in IE 7.
 *    Known issue: excess padding remains in IE 6.
 */
input[type="checkbox"],
input[type="radio"] {
  padding: 0;
  /* 2 */ }

/**
 * 1. Address `appearance` set to `searchfield` in Safari 5 and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari 5 and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */ }

/**
 * Remove inner padding and search cancel button in Safari 5 and Chrome
 * on OS X.
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/* Remove inner padding and border in Firefox 4+. */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * 1. Remove the default vertical scrollbar in IE.
 * 2. Improve readability and alignment in all browsers.
 */
textarea {
  overflow: auto;
  /* 1 */
  vertical-align: top;
  /* 2 */ }

/* Drupal-style form labels. */
label, legend, .field__label {
  display: block;
  font-weight: bold; }

/**
 * Tables
 */
table {
  /* Remove most spacing between table cells. */
  border-collapse: collapse;
  border-spacing: 0;
  /* Prevent cramped-looking tables */
  width: 100%;
  /* Add margins. */
  margin: 1em 0; }

/**
 * @file
 * Variables.
 */
/**
 * @file
 * Mixins for controlling display for accessibility..
 */
.element-invisible,
.visually-hidden, input[type="checkbox"],
input[type="radio"] {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px);
  white-space: nowrap; }

.element-invisible-off {
  position: static !important;
  clip: auto;
  height: auto;
  width: auto;
  overflow: auto; }

.element-focusable {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px);
  white-space: nowrap; }
  .element-focusable:active, .element-focusable:focus {
    position: static !important;
    clip: auto;
    height: auto;
    width: auto;
    overflow: auto; }

.skip-link {
  display: block;
  background: #2d2d2d;
  color: #fff;
  text-align: center;
  height: 0; }
  .skip-link:focus {
    height: auto;
    padding: 10px; }

.screen-reader-text {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px); }
  .screen-reader-text:focus {
    top: 5px;
    left: 5px;
    z-index: 100000;
    display: block;
    width: auto;
    height: auto;
    padding: 15px 23px 14px;
    clip: auto !important;
    background-color: #f1f1f1;
    border-radius: 3px;
    -webkit-box-shadow: 0 0 2px 2px rgba(0, 0, 0, 0.6);
            box-shadow: 0 0 2px 2px rgba(0, 0, 0, 0.6);
    color: #21759b;
    line-height: normal;
    text-decoration: none; }

/**
 * @file
 * Custom Mixins.
 *
 */
/**
 * @file
 * Custom extends.
 *
 */
nav ul.menu, .breadcrumb ul,
.breadcrumb ol {
  list-style: none;
  margin: 0;
  padding: 0; }
  nav ul.menu li, .breadcrumb ul li, .breadcrumb ol li {
    list-style-type: none;
    list-style-image: none; }

table td:first-child,
table th:first-child, form > :first-child, figure.align-center:first-child, .text-formatted .align-center.media--type-image:first-child, .text-formatted .media--type-image.media--view-mode-xl:first-child, .field--type-text-with-summary > .field__items > .field__item > :first-child,
.field--type-text-long > .field__items > .field__item > :first-child, #sidebar .block:first-child {
  margin-top: 0; }

table td:last-child,
table th:last-child, form > :last-child, figure.align-center:last-child, .text-formatted .align-center.media--type-image:last-child, .text-formatted .media--type-image.media--view-mode-xl:last-child, .field--type-text-with-summary > .field__items > .field__item > :last-child,
.field--type-text-long > .field__items > .field__item > :last-child, #sidebar .block:last-child {
  margin-bottom: 0; }

.container, .content__no-sidebar .text-formatted .media--type-image.media--view-mode-xl .media__content, #main .content__no-sidebar, #main .content__one-sidebar, #banner .region-banner {
  position: relative;
  width: calc(100% - 4rem);
  margin: auto; }
  @media (min-width: 760px) {
    .container, .content__no-sidebar .text-formatted .media--type-image.media--view-mode-xl .media__content, #main .content__no-sidebar, #main .content__one-sidebar, #banner .region-banner {
      width: calc(100% - 6rem); } }
  @media (min-width: 1024px) {
    .container, .content__no-sidebar .text-formatted .media--type-image.media--view-mode-xl .media__content, #main .content__no-sidebar, #main .content__one-sidebar, #banner .region-banner {
      width: calc(100% - 8rem);
      max-width: 136rem; } }

.video-player iframe,
.video-player object,
.video-player embed,
.field--name-field-media-oembed-video iframe,
.field--name-field-media-oembed-video object,
.field--name-field-media-oembed-video embed {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0; }

/**
* @file
* Typographic styles.
*/
body {
  font-size: 1.6rem;
  line-height: 1.75;
  color: #000;
  font-family: Arial, sans-serif; }

.container {
  max-width: 67rem; }

.large {
  font-size: 2.2rem;
  line-height: 1.4; }

small,
.small,
.description,
figcaption,
caption {
  font-size: 1.3rem;
  line-height: 1.5; }

blockquote {
  font-size: 3.3rem;
  line-height: 1.27; }
  blockquote p {
    position: relative;
    margin: 0.5em 0; }

q,
cite {
  font-size: 1.5rem;
  line-height: 1.6;
  font-style: normal;
  display: block; }

mark {
  background-color: #f7f7f7; }

figcaption,
caption {
  margin: 1rem 0; }

.text-align-center,
.rtecenter {
  text-align: center; }

/**
* @file
* heading element styles.
*/
h1 {
  font-size: 5rem;
  line-height: 1.2; }

h2 {
  font-size: 2.8rem;
  line-height: 1.25; }

h3 {
  font-size: 2.4rem;
  line-height: 1.25; }

h4 {
  font-size: 2.2rem;
  line-height: 1.25; }

h5 {
  font-size: 2rem;
  line-height: 1.25; }

/**
 * @file
 * Link styles.
 */
a {
  text-decoration: underline; }

/**
* @file
* button and button link element styles.
*/
.button-link, input[type="submit"],
input[type="button"],
input[type="reset"] {
  position: relative;
  z-index: 1;
  display: inline-block;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  padding: 2.4rem;
  border: 0;
  border-radius: 0;
  background-color: #000;
  color: #fff;
  font-family: Arial, sans-serif;
  line-height: 1;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  cursor: pointer;
  min-width: 20rem;
  -webkit-transition: all 300ms;
  transition: all 300ms;
  text-align: center; }
  .button-link[type="reset"],
  input[type="reset"] {
    background-color: #000; }
  .button-link[disabled], input[disabled][type="submit"],
  input[disabled][type="button"],
  input[disabled][type="reset"] {
    background-color: #000;
    opacity: 0.3;
    pointer-events: none; }
  .button-link:hover, input:hover[type="submit"],
  input:hover[type="button"],
  input:hover[type="reset"], .button-link:focus, input:focus[type="submit"],
  input:focus[type="button"],
  input:focus[type="reset"] {
    background-color: #1a1a1a; }
  .contextual .button-link, .contextual input[type="submit"],
  .contextual input[type="button"],
  .contextual input[type="reset"],
  #toolbar-bar .button-link,
  #toolbar-bar input[type="submit"],
  #toolbar-bar input[type="button"],
  #toolbar-bar input[type="reset"] {
    min-width: 1rem; }

/**
* @file
* Table styles.
*/
table {
  width: 100%;
  display: block;
  overflow: auto; }
  table tr:nth-child(even) {
    background-color: rgba(0, 0, 0, 0.5); }
  table td,
  table th {
    padding: 1.5rem 2rem;
    text-align: left;
    min-width: 18rem; }
  table thead th,
  table tbody th,
  table tfoot th {
    background-color: #000;
    color: #fff;
    font-weight: normal; }
  table th:empty {
    visibility: hidden; }

/**
* @file
* Form element styles.
*/
form {
  margin-top: 2rem;
  margin-bottom: 2rem; }

.form-item,
.form-actions {
  margin: 2rem 0; }

label, legend, .field__label {
  margin-bottom: 0.5rem; }

input[type="text"],
input[type="search"],
input[type="email"],
input[type="password"],
input[type="number"],
input[type="tel"],
input[type="url"],
input[type="date"],
input[type="month"],
input[type="week"],
input[type="datetime"],
input[type="datetime-local"],
textarea {
  padding: 1.5rem;
  border: 1px solid #000;
  background-color: #fff;
  width: 100%; }
  input[type="text"]::-webkit-input-placeholder,
  input[type="search"]::-webkit-input-placeholder,
  input[type="email"]::-webkit-input-placeholder,
  input[type="password"]::-webkit-input-placeholder,
  input[type="number"]::-webkit-input-placeholder,
  input[type="tel"]::-webkit-input-placeholder,
  input[type="url"]::-webkit-input-placeholder,
  input[type="date"]::-webkit-input-placeholder,
  input[type="month"]::-webkit-input-placeholder,
  input[type="week"]::-webkit-input-placeholder,
  input[type="datetime"]::-webkit-input-placeholder,
  input[type="datetime-local"]::-webkit-input-placeholder,
  textarea::-webkit-input-placeholder {
    color: rgba(0, 0, 0, 0.5); }
  input[type="text"]:-moz-placeholder,
  input[type="search"]:-moz-placeholder,
  input[type="email"]:-moz-placeholder,
  input[type="password"]:-moz-placeholder,
  input[type="number"]:-moz-placeholder,
  input[type="tel"]:-moz-placeholder,
  input[type="url"]:-moz-placeholder,
  input[type="date"]:-moz-placeholder,
  input[type="month"]:-moz-placeholder,
  input[type="week"]:-moz-placeholder,
  input[type="datetime"]:-moz-placeholder,
  input[type="datetime-local"]:-moz-placeholder,
  textarea:-moz-placeholder {
    color: rgba(0, 0, 0, 0.5); }
  input[type="text"]::-moz-placeholder,
  input[type="search"]::-moz-placeholder,
  input[type="email"]::-moz-placeholder,
  input[type="password"]::-moz-placeholder,
  input[type="number"]::-moz-placeholder,
  input[type="tel"]::-moz-placeholder,
  input[type="url"]::-moz-placeholder,
  input[type="date"]::-moz-placeholder,
  input[type="month"]::-moz-placeholder,
  input[type="week"]::-moz-placeholder,
  input[type="datetime"]::-moz-placeholder,
  input[type="datetime-local"]::-moz-placeholder,
  textarea::-moz-placeholder {
    color: rgba(0, 0, 0, 0.5); }
  input[type="text"]:-ms-input-placeholder,
  input[type="search"]:-ms-input-placeholder,
  input[type="email"]:-ms-input-placeholder,
  input[type="password"]:-ms-input-placeholder,
  input[type="number"]:-ms-input-placeholder,
  input[type="tel"]:-ms-input-placeholder,
  input[type="url"]:-ms-input-placeholder,
  input[type="date"]:-ms-input-placeholder,
  input[type="month"]:-ms-input-placeholder,
  input[type="week"]:-ms-input-placeholder,
  input[type="datetime"]:-ms-input-placeholder,
  input[type="datetime-local"]:-ms-input-placeholder,
  textarea:-ms-input-placeholder {
    color: rgba(0, 0, 0, 0.5); }

input[type="search"],
input[type='text']#edit-search,
input[type='text'][id^='edit-search--'] {
  background: url("../../images/svg/search.svg") calc(100% - 1.5rem) 50% no-repeat;
  padding-right: 3.5rem; }

input[type="checkbox"] + label, input[type="checkbox"] + legend, input[type="checkbox"] + .field__label,
input[type="radio"] + label,
input[type="radio"] + legend,
input[type="radio"] + .field__label {
  position: relative;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  font-weight: normal;
  cursor: pointer; }
  input[type="checkbox"] + label:before, input[type="checkbox"] + legend:before, input[type="checkbox"] + .field__label:before,
  input[type="radio"] + label:before,
  input[type="radio"] + legend:before,
  input[type="radio"] + .field__label:before {
    display: inline-block;
    width: 1.4rem;
    height: 1.4rem;
    margin-top: 0.1rem;
    margin-right: 0.8rem;
    overflow: hidden;
    border: 1px solid #000;
    content: '';
    background-color: #fff; }

input[type="checkbox"]:hover + label:before, input[type="checkbox"]:hover + legend:before, input[type="checkbox"]:hover + .field__label:before,
input[type="checkbox"]:hover:checked + label:before,
input[type="checkbox"]:hover:checked + legend:before,
input[type="checkbox"]:hover:checked + .field__label:before, input[type="checkbox"]:focus + label:before, input[type="checkbox"]:focus + legend:before, input[type="checkbox"]:focus + .field__label:before,
input[type="checkbox"]:focus:checked + label:before,
input[type="checkbox"]:focus:checked + legend:before,
input[type="checkbox"]:focus:checked + .field__label:before,
input[type="radio"]:hover + label:before,
input[type="radio"]:hover + legend:before,
input[type="radio"]:hover + .field__label:before,
input[type="radio"]:hover:checked + label:before,
input[type="radio"]:hover:checked + legend:before,
input[type="radio"]:hover:checked + .field__label:before,
input[type="radio"]:focus + label:before,
input[type="radio"]:focus + legend:before,
input[type="radio"]:focus + .field__label:before,
input[type="radio"]:focus:checked + label:before,
input[type="radio"]:focus:checked + legend:before,
input[type="radio"]:focus:checked + .field__label:before {
  -webkit-box-shadow: 0 0 2px 1px #000;
          box-shadow: 0 0 2px 1px #000; }

input[type="checkbox"]:checked + label:before, input[type="checkbox"]:checked + legend:before, input[type="checkbox"]:checked + .field__label:before,
input[type="radio"]:checked + label:before,
input[type="radio"]:checked + legend:before,
input[type="radio"]:checked + .field__label:before {
  background: #000 url("../../images/svg/check.svg") center center no-repeat;
  background-size: 1.2rem; }


input[type="radio"] + label:before,
input[type="radio"] + legend:before,
input[type="radio"] + .field__label:before {
  border-radius: 50%;
  background-image: none !important; }

select {
  position: relative;
  z-index: 2;
  display: block;
  padding: 1.5rem;
  -moz-padding-end: 10px;
  border: 1px solid #000;
  border-radius: 0;
  background: #fff url("../../images/svg/select.svg") calc(100% - 1.5rem) 50% no-repeat;
  background-size: 1rem auto;
  width: 100%;
  line-height: 1;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  cursor: pointer; }
  select::ms-expand {
    display: none; }

fieldset {
  border: 1px solid #000;
  padding: 2rem; }

/**
* @file
* Media element styles.
*/
.video-player,
.field--name-field-media-oembed-video {
  position: relative;
  overflow: hidden;
  height: 0;
  padding-bottom: 56.25%; }

video {
  width: 100%;
  height: auto; }

figure.align-left, .text-formatted .align-left.media--type-image {
  float: left;
  margin: 0 3rem 3rem 0; }

figure.align-right, .text-formatted .align-right.media--type-image {
  float: right;
  margin: 0 0 3rem 3rem; }

figure.align-center, .text-formatted .align-center.media--type-image {
  margin: 4rem auto; }

@media (min-width: 1024px) {
  .text-formatted .media--type-image.media--view-mode-sm {
    width: 50%; }
  .text-formatted .media--type-image.media--view-mode-md {
    width: 66%; } }

.text-formatted .media--type-image.media--view-mode-xl {
  margin: 4rem calc(50% - 50vw); }
  .content__no-sidebar .text-formatted .media--type-image.media--view-mode-xl {
    margin: 4rem calc(50% - 50vw); }
  @media (max-width: 1023px) {
    .content__one-sidebar .text-formatted .media--type-image.media--view-mode-xl {
      margin: 4rem calc(50% - 50vw); }
      .content__one-sidebar .text-formatted .media--type-image.media--view-mode-xl .media__content {
        position: relative;
        width: calc(100% - 4rem);
        margin: auto; } }
    @media (max-width: 1023px) and (min-width: 760px) {
      .content__one-sidebar .text-formatted .media--type-image.media--view-mode-xl .media__content {
        width: calc(100% - 6rem); } }
    @media (max-width: 1023px) and (min-width: 1024px) {
      .content__one-sidebar .text-formatted .media--type-image.media--view-mode-xl .media__content {
        width: calc(100% - 8rem);
        max-width: 136rem; } }
  @media (min-width: 1024px) {
    .content__one-sidebar .text-formatted .media--type-image.media--view-mode-xl {
      margin: 4rem -38rem 4rem 0; } }
  .text-formatted .media--type-image.media--view-mode-xl img {
    display: block;
    margin: auto; }

.text-formatted .media--type-remote-video {
  margin: 4rem 0; }

/**
 * @file
 * Site Branding styles.
 */
#logo {
  display: block;
  position: relative; }
  #logo svg {
    width: 6rem;
    height: 6rem; }
    @media (min-width: 1024px) {
      #logo svg {
        width: 8rem;
        height: 8rem; } }
    #logo svg > path {
      fill: #000; }

/**
 * @file
 * Global field styles.
 */
.field--label-inline .field__label {
  margin-right: 1rem; }
  .field--label-inline .field__label:after {
    content: ':'; }

.field--label-inline {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex; }

/**
* @file
* hr styles.
*/
hr {
  border: 0;
  border-bottom: 1px solid #000;
  margin: 3rem 0; }

/**
* @file
* List elements.
*/
dl dd {
  margin-left: 2rem; }

/**
* @file
* Navigation styles.
*/
/**
* @file
* Breadcrumb styles.
*/
.breadcrumb {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis; }
  .breadcrumb ul,
  .breadcrumb ol {
    display: inline; }
    .breadcrumb ul li,
    .breadcrumb ol li {
      display: inline; }
      .breadcrumb ul li + li:before,
      .breadcrumb ol li + li:before {
        content: '/'; }

/**
* @file
* Pager styles.
*/
.pager__item,
.pager__item--first,
.pager__item--previous,
.pager__item--next,
.pager__item--last,
.pager__item--ellipsis {
  display: inline;
  padding: 0 1rem;
  list-style-type: none;
  background-image: none; }

nav.pager {
  clear: both;
  padding: 0;
  text-align: center; }

.pager__item.is-active,
.pager__item--first.is-active,
.pager__item--previous.is-active,
.pager__item--next.is-active,
.pager__item--last.is-active,
.pager__item--ellipsis.is-active {
  font-weight: bold; }

.pager__item--first,
.pager__item--last {
  display: none; }

/**
 * @file
 * Page container styling.
 */
#page {
  position: relative;
  overflow: hidden; }

/**
 * @file
 * Main, Content and Sidebar region styling.
 */
#main .content__no-sidebar {
  max-width: 113rem;
  padding: 6rem 0; }

#main .content__one-sidebar {
  max-width: 113rem;
  padding: 6rem 0; }
  @media (min-width: 1024px) {
    #main .content__one-sidebar {
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-pack: justify;
          -ms-flex-pack: justify;
              justify-content: space-between; }
      #main .content__one-sidebar #content {
        max-width: 67rem; }
      #main .content__one-sidebar #sidebar {
        width: 32rem;
        margin-left: 6rem;
        -webkit-box-ordinal-group: 3;
            -ms-flex-order: 2;
                order: 2; }
        #main .content__one-sidebar #sidebar .region-sidebar > * {
          position: relative; } }

#content {
  position: relative; }

#sidebar {
  position: relative; }
  @media (max-width: 1023px) {
    #sidebar {
      margin-top: 6rem; } }
  #sidebar .block {
    margin: 6rem 0; }

/**
 * @file
 * Banner region styling.
 */
#banner {
  position: relative; }
  #banner .region-banner {
    max-width: 67rem; }

/**
 * @file
 * Header region styling.
 */
#header {
  position: relative; }

/**
 * @file
 * Footer region styling.
 */
#footer {
  position: relative; }

/**
 * @file
 * Print Styles.
 *
 * By importing this CSS file as media "all", we allow this print file to be
 * aggregated with other stylesheets, for improved front-end performance.
 */
@media print {
  html {
    font-size: 6pt; }
  a:link, a:visited {
    text-decoration: underline !important; }
    a:link.site-link, a:link.button-link, a:link#logo, a:visited.site-link, a:visited.button-link, a:visited#logo {
      text-decoration: none !important; }
  #main a[href]:after {
    content: " (" attr(href) ")" !important;
    font-weight: normal;
    font-size: 1rem; }
  #main a[href^="/"]:not([href^="//"]):after {
    content: " (" attr(href) ")" !important; }
  #main a[href=""]:after, #main a[href^="file:"]:after, #main a[href^="javascript:"]:after, #main a[href^="#"]:after {
    content: "" !important; }
  #content abbr[title]:after {
    content: " (" attr(title) ")"; }
  body,
  #page,
  #main,
  #content {
    background-color: transparent !important;
    background-image: none !important;
    color: #000; }
  #content {
    display: block !important;
    float: none !important;
    width: 100% !important;
    margin: 0 !important;
    padding: 0 !important; }
  #skip-link,
  #navigation,
  #footer,
  .sidebars,
  .breadcrumb,
  .pager,
  .feed-icons,
  .f-menu {
    display: none !important;
    visibility: hidden !important; }
  @page {
    margin: 80pt;
    h2,
    h3,
    h4 {
      page-break-after: avoid;
      -webkit-column-break-after: avoid;
         -moz-column-break-after: avoid;
              break-after: avoid-page; }
    li,
    p {
      orphans: 2;
      widows: 2; }
    figure {
      page-break-inside: avoid;
      -webkit-column-break-inside: avoid;
         -moz-column-break-inside: avoid;
              break-inside: avoid; } }
  .js-transparent {
    opacity: 1 !important; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
